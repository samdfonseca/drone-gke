kind: pipeline
name: default
platform:
  os: linux
  arch: amd64
steps:
  - name: test
    pull: if-not-exists
    image: golang:alpine
    commands:
      - go mod download
      - go test -cover -vet all
    environment:
      CGO_ENABLED: 0
      GOPROXY: https://proxy.golang.org

  - name: build
    pull: if-not-exists
    image: golang:alpine
    commands:
      - go build -a -ldflags "-X main.version=n/a -X main.rev=${DRONE_COMMIT}"
    environment:
      CGO_ENABLED: 0
      GOPROXY: https://proxy.golang.org
    when:
      branch:
        - master
      event:
        - push

  - name: build_release
    pull: if-not-exists
    image: golang:alpine
    commands:
      - go build -a -ldflags "-X main.version=${DRONE_TAG} -X main.rev=${DRONE_COMMIT}"
    environment:
      CGO_ENABLED: 0
      GOPROXY: https://proxy.golang.org
    when:
      event:
        - tag

  - name: publish_build
    pull: if-not-exists
    image: plugins/gcr
    settings:
      registry: us.gcr.io
      repo: nyt-aiqdata-dev/drone-gke
      tags: ['${DRONE_COMMIT}']
    environment:
      TOKEN:
        from_secret: google_credentials_dev
    when:
      branch:
        - master
      event:
        - push

  - name: publish_release
    pull: if-not-exists
    image: plugins/gcr
    settings:
      registry: us.gcr.io
      repo: nyt-aiqdata-dev/drone-gke
      tags: ['latest', '${DRONE_TAG}']
    environment:
      TOKEN:
        from_secret: google_credentials_dev
    when:
      event:
        - tag
